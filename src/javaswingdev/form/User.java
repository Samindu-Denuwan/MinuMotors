package javaswingdev.form;

import com.bike.common.MD5;
import com.bike.common.SystemConfigData;
import com.bike.db.DB;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.log4j.Logger;

public class User extends javax.swing.JPanel {

    private Logger log;

    public User() {
        initComponents();
        log = Logger.getLogger("bikeLogger");
        log.info("Manage User Page Loaded");
        JT_user.fixTable(jScrollPane1);
        generateUserID();
        loadUserTable();
        loadUserType();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundPanel1 = new javaswingdev.swing.RoundPanel();
        jLabel6 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        txt_username = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_selectEmp = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        combo_user_type = new combobox.Combobox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_confirm_password = new javax.swing.JPasswordField();
        txt_password = new javax.swing.JPasswordField();
        jLabel17 = new javax.swing.JLabel();
        switchButton = new javaswingdev.swing.SwitchButton();
        clearField = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txt_user_id = new javax.swing.JTextField();
        save1 = new javax.swing.JButton();
        txt_emp_id = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_emp_name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        roundPanel2 = new javaswingdev.swing.RoundPanel();
        card1 = new javaswingdev.card.Card();
        jLabel13 = new javax.swing.JLabel();
        textFieldAnimation1 = new swing.TextFieldAnimation();
        jScrollPane1 = new javax.swing.JScrollPane();
        JT_user = new javaswingdev.swing.table.Table();

        setBackground(new java.awt.Color(228, 232, 229));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roundPanel1.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel6.setText("Manage Users");
        roundPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        delete.setBackground(new java.awt.Color(153, 204, 255));
        delete.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(0, 102, 204));
        delete.setText("DELETE");
        delete.setBorder(null);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        roundPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 960, 160, 35));

        txt_username.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_username.setForeground(new java.awt.Color(102, 102, 102));
        txt_username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_username.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_usernameActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 340, 35));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Username");
        roundPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, -1, -1));

        btn_selectEmp.setBackground(new java.awt.Color(153, 204, 255));
        btn_selectEmp.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_selectEmp.setForeground(new java.awt.Color(0, 102, 204));
        btn_selectEmp.setText("SELECT SYSTEM USERS");
        btn_selectEmp.setBorder(null);
        btn_selectEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selectEmpActionPerformed(evt);
            }
        });
        roundPanel1.add(btn_selectEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 340, 35));

        update.setBackground(new java.awt.Color(153, 204, 255));
        update.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(0, 102, 204));
        update.setText("UPDATE");
        update.setBorder(null);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        roundPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 960, 160, 35));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Password");
        roundPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 640, -1, -1));

        combo_user_type.setBorder(null);
        combo_user_type.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        combo_user_type.setLabeText("");
        roundPanel1.add(combo_user_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 340, 40));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("User Type");
        roundPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Confirm Password");
        roundPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 730, -1, -1));

        txt_confirm_password.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_confirm_password.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_confirm_password.setName(""); // NOI18N
        roundPanel1.add(txt_confirm_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 770, 340, 35));

        txt_password.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_password.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_password.setName(""); // NOI18N
        txt_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passwordActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 670, 340, 35));

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Status");
        roundPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 840, -1, -1));

        switchButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        switchButton.setName(""); // NOI18N
        roundPanel1.add(switchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 840, 40, 20));

        clearField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/burger/icon/close_1.png"))); // NOI18N
        clearField.setText("Clear Fields");
        clearField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearFieldMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearFieldMouseEntered(evt);
            }
        });
        roundPanel1.add(clearField, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 830, 120, 40));

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("User ID");
        roundPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        txt_user_id.setEditable(false);
        txt_user_id.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_user_id.setForeground(new java.awt.Color(102, 102, 102));
        txt_user_id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_user_id.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_user_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_user_idActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_user_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 340, 35));

        save1.setBackground(new java.awt.Color(153, 204, 255));
        save1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        save1.setForeground(new java.awt.Color(0, 102, 204));
        save1.setText("SAVE USER");
        save1.setBorder(null);
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });
        roundPanel1.add(save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 900, 340, 35));

        txt_emp_id.setEditable(false);
        txt_emp_id.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_emp_id.setForeground(new java.awt.Color(102, 102, 102));
        txt_emp_id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_emp_id.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_emp_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_emp_idActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_emp_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 340, 35));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Employee ID");
        roundPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        txt_emp_name.setEditable(false);
        txt_emp_name.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_emp_name.setForeground(new java.awt.Color(102, 102, 102));
        txt_emp_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_emp_name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_emp_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_emp_nameActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_emp_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 340, 35));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Employee Name");
        roundPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        add(roundPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 380, 1030));

        roundPanel2.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        card1.setDescription("");
        card1.setIcon(javaswingdev.GoogleMaterialDesignIcon.SEARCH);
        roundPanel2.add(card1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 60, 50));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel13.setText("Search Users");
        roundPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        textFieldAnimation1.setBackground(new java.awt.Color(228, 232, 229));
        textFieldAnimation1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldAnimation1KeyReleased(evt);
            }
        });
        roundPanel2.add(textFieldAnimation1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 330, -1));

        JT_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "Employee ID", "Username", "User Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JT_user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JT_userMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                JT_userMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(JT_user);

        roundPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 200, 1230, 800));

        add(roundPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 1280, 1030));
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
       try {
          if (!txt_user_id.getText().equals("")) {
                int deleteUsr = JOptionPane.showConfirmDialog(null, "Do you want to Delete this User?", "Select", JOptionPane.YES_NO_OPTION);
                if (deleteUsr == 0) {
                    ResultSet rs = DB.search("select * from system_user where user_id = '" + txt_user_id.getText() + "'");
                    if (rs.next()) {
                        DB.push("update system_user set stat = '0' where user_id ='"
                                + txt_user_id.getText() + "'");

                        DB.push("insert into system_activity (detail, date, time, employee) values ("
                                + "'User Deleted',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),'" + SystemConfigData.getEmployee() + "')");
          
                        JOptionPane.showMessageDialog(this, "User Delete Successfuly!", "Deleted", JOptionPane.INFORMATION_MESSAGE);
//                   
                        log.info("User Deleted Successful. User : " + txt_username.getText() + " | By : " + SystemConfigData.getEmployee());
                        clearFields();
                        loadUserTable();
                    } else {
                        clearFields();
                        JOptionPane.showMessageDialog(this, "Invalid User ID!", "Error", JOptionPane.ERROR_MESSAGE);

                        log.error("Invalid User Id");
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "Fill the User ID!", "Error", JOptionPane.ERROR_MESSAGE);

            }  
        } catch (Exception e) {
             log.error("User Delete Failed", e);
            
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void btn_selectEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selectEmpActionPerformed
        SystemUsers systemUsers = new SystemUsers(User.this);
        systemUsers.setVisible(true);


    }//GEN-LAST:event_btn_selectEmpActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try {
            if (!txt_confirm_password.getPassword().equals("") && !txt_password.getPassword().equals("")) {
                ResultSet rs = DB.search("select * from system_user where user_id = '" + txt_user_id.getText() + "'");
                if (rs.next()) {

                    String type = combo_user_type.getSelectedItem().toString();
                    String password = new String(txt_password.getPassword());
                    String repassword = new String(txt_confirm_password.getPassword());

                    String stat = null;
                    if (switchButton.isSelected()) {
                        stat = "1";
                    } else {
                        stat = "0";
                    }

                    ResultSet rs2 = DB.search("select * from user_type where type = '" + type + "'");
                    if (rs2.next()) {
                        String typeId = (rs2.getString("user_type_id"));

                        if (password.equals(repassword)) {
                            String encPw = MD5.getMd5(password);
                            DB.push("update system_user set password= '" + encPw + "',user_type= '" + typeId + "',stat= '" + stat + "' "
                                    + "where user_id ='"
                                    + txt_user_id.getText() + "' ");

                            DB.push("insert into system_activity (detail, date, time, employee) values ("
                                    + "'System User Updated',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),'" + SystemConfigData.getEmployee() + "')");
                         
                            log.info("System User update Successful. System user : " + txt_username.getText() + " | By : " + SystemConfigData.getEmployee());
                            clearFields();
                            JOptionPane.showMessageDialog(this, "System User Update Succesful!!", "Updated", JOptionPane.INFORMATION_MESSAGE);
                            loadUserTable();
                        } else {
                            JOptionPane.showMessageDialog(this, "Password Not Matching!!", "Error", JOptionPane.ERROR_MESSAGE);
                            log.error("Password Not Matching");
                        }

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Use SAVE button to Save Details!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Fill All text Inpute!", "Error", JOptionPane.ERROR_MESSAGE);

            }
        } catch (Exception e) {
            log.error("Product Update Failed", e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void JT_userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JT_userMouseClicked
        try {
            DefaultTableModel dtm = (DefaultTableModel) JT_user.getModel();
            int selectRow = JT_user.getSelectedRow();

            String user_id = dtm.getValueAt(selectRow, 0).toString();
            txt_user_id.setText(user_id);

            ResultSet rs = DB.search("select * from system_user where user_id = '" + user_id + "'");
            if (rs.next()) {
                txt_username.setText(rs.getString("username"));
                txt_username.setEnabled(false);

                String status = (rs.getString("stat"));
                if (status.equals("1")) {
                    switchButton.setSelected(true);
                } else {
                    switchButton.setSelected(false);
                }
            }
            String typeID = (rs.getString("user_type"));
            ResultSet rs2 = DB.search("select * from user_type where user_type_id = '" + typeID + "'");
            if (rs2.next()) {
                String brand = (rs2.getString("type"));
                for (int i = 0; i < combo_user_type.getItemCount(); i++) {
                    if (combo_user_type.getItemAt(i).equals(brand)) {
                        combo_user_type.setSelectedIndex(i);
                    }
                }

            }

            String EmpID = (rs.getString("employee_id"));

            ResultSet rs3 = DB.search("select * from employee where emp_id = '" + EmpID + "'");
            if (rs3.next()) {
                txt_emp_id.setText(EmpID);

                String name = (rs3.getString("fname") + " " + rs3.getString("lname"));
                txt_emp_name.setText(name);
            }

        } catch (Exception e) {
            log.error("Load Product Details Failed", e);
        }
    }//GEN-LAST:event_JT_userMouseClicked

    private void clearFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearFieldMouseClicked
        clearFields();
    }//GEN-LAST:event_clearFieldMouseClicked

    private void clearFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearFieldMouseEntered

    }//GEN-LAST:event_clearFieldMouseEntered

    private void textFieldAnimation1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldAnimation1KeyReleased
        DefaultTableModel dtm = (DefaultTableModel) JT_user.getModel();
        String searchText = textFieldAnimation1.getText();
        TableRowSorter<DefaultTableModel> searchUser = new TableRowSorter<>(dtm);
        JT_user.setRowSorter(searchUser);
        searchUser.setRowFilter(RowFilter.regexFilter(searchText));
    }//GEN-LAST:event_textFieldAnimation1KeyReleased

    private void txt_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_usernameActionPerformed
        txt_password.grabFocus();
    }//GEN-LAST:event_txt_usernameActionPerformed

    private void txt_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passwordActionPerformed
        txt_confirm_password.grabFocus();
    }//GEN-LAST:event_txt_passwordActionPerformed

    private void txt_user_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_user_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_user_idActionPerformed

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        try {
            ResultSet rs = DB.search("select * from system_user where user_id ='" + txt_user_id.getText() + "' ");
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "User ID is already Used.Please use UPDATE button to update details", "Error", JOptionPane.ERROR_MESSAGE);

            } else {
                if (!txt_user_id.getText().equals("") && !txt_username.getText().equals("")
                        && !txt_emp_id.getText().equals("") && !txt_emp_name.getText().equals("")
                        && !txt_password.getPassword().equals("") && !txt_confirm_password.getPassword().equals("")) {

                    String type = combo_user_type.getSelectedItem().toString();
                    String password = new String(txt_password.getPassword());
                    String repassword = new String(txt_confirm_password.getPassword());

                    String stat = null;
                    if (switchButton.isSelected()) {
                        stat = "1";
                    } else {
                        stat = "0";
                    }

                    ResultSet rs2 = DB.search("select * from user_type where type = '" + type + "'");
                    if (rs2.next()) {
                        String typeId = (rs2.getString("user_type_id"));

                        ResultSet rs3 = DB.search("select * from system_user where username ='" + txt_username.getText() + "' ");
                        if (rs3.next()) {

                            JOptionPane.showMessageDialog(this, "Username is already Used.Please insert another !!", "Error", JOptionPane.ERROR_MESSAGE);
                            txt_username.setText(null);

                        } else {
                            if (password.equals(repassword)) {
                                String encPw = MD5.getMd5(password);
                                DB.push("insert into system_user values('" + txt_user_id.getText() + "','" + txt_emp_id.getText()
                                        + "','" + txt_username.getText() + "','"
                                        + encPw + "','" + typeId + "','" + stat + "')");

                                DB.push("insert into system_activity (detail, date, time, employee) values ("
                                        + "'System User Saved',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),'" + SystemConfigData.getEmployee() + "')");
                                
                                DB.push("update employee set assign_system = 'Assign' where emp_id = '"+txt_emp_id.getText()+"' ");

                                log.info("System User Saved Successful. System User : " + txt_username.getText() + " | By : " + SystemConfigData.getEmployee());
                                clearFields();
                                JOptionPane.showMessageDialog(this, "System User Saved Succesful!!", "Saved", JOptionPane.INFORMATION_MESSAGE);
                                loadUserTable();

                            } else {
                                JOptionPane.showMessageDialog(this, "Password Not Matching!!", "Error", JOptionPane.ERROR_MESSAGE);

                            }
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Fill All text Inpute!", "Error", JOptionPane.ERROR_MESSAGE);

                }
            }
        } catch (Exception e) {
            log.error("Product Save Failed", e);
        }
    }//GEN-LAST:event_save1ActionPerformed

    private void txt_emp_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_emp_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emp_idActionPerformed

    private void txt_emp_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_emp_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emp_nameActionPerformed

    private void JT_userMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JT_userMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_JT_userMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javaswingdev.swing.table.Table JT_user;
    private javax.swing.JButton btn_selectEmp;
    private javaswingdev.card.Card card1;
    private javax.swing.JLabel clearField;
    private combobox.Combobox combo_user_type;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javaswingdev.swing.RoundPanel roundPanel1;
    private javaswingdev.swing.RoundPanel roundPanel2;
    private javax.swing.JButton save1;
    private javaswingdev.swing.SwitchButton switchButton;
    private swing.TextFieldAnimation textFieldAnimation1;
    private javax.swing.JPasswordField txt_confirm_password;
    public javax.swing.JTextField txt_emp_id;
    public javax.swing.JTextField txt_emp_name;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_user_id;
    private javax.swing.JTextField txt_username;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        txt_username.setText(null);
        combo_user_type.setSelectedIndex(-1);
        txt_password.setText(null);
        txt_confirm_password.setText(null);
        txt_emp_id.setText(null);
        txt_emp_name.setText(null);
        switchButton.setSelected(false);
        generateUserID();
        txt_username.setEnabled(true);
    }

    private void generateUserID() {
        try {
            ResultSet rs = DB.search("select count(*) as user_count from system_user");
            if (rs.next()) {
                int count = rs.getInt("user_count");
               int c = Integer.parseInt(new SimpleDateFormat("Mddyy").format(new Date()));
                int value = c+(++count);
                String useRid = "USR-"+value;
                txt_user_id.setText(useRid);
                log.info("User ID Loaded");
            }
            txt_username.grabFocus();
        } catch (Exception e) {
            log.error("Generate User ID Failed", e);
        }
    }

    private void loadUserTable() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) JT_user.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.search("select * from system_user");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("user_id"));
                v.add(rs.getString("employee_id"));
                v.add(rs.getString("username"));
                v.add(rs.getString("user_type"));
                dtm.addRow(v);

            }

        } catch (Exception e) {
            log.error("Load User Details Failed", e);
        }

    }

    private void loadUserType() {
        try {
            ResultSet resultSet = DB.search("select * from user_type");
            Vector v = new Vector();
            while (resultSet.next()) {
                String data = resultSet.getString("type");
                v.add(data);
            }
            combo_user_type.setModel(new DefaultComboBoxModel(v));
            combo_user_type.setSelectedIndex(-1);

        } catch (Exception e) {
            log.error("User Type  Load Failed", e);
        }
    }
}
