package javaswingdev.form;

import com.bike.common.SystemConfigData;
import com.bike.db.DB;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.log4j.Logger;

public class Employees extends javax.swing.JPanel {

    private Logger log;

    public Employees() {
        initComponents();
        log = Logger.getLogger("bikeLogger");
        log.info("Manage Employees Page Loaded");
        JT_employee.fixTable(jScrollPane1);
        generateEmpID();
        loadRole();
        loadEmployeeTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupGender = new javax.swing.ButtonGroup();
        roundPanel1 = new javaswingdev.swing.RoundPanel();
        jLabel6 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        switchButton = new javaswingdev.swing.SwitchButton();
        txt_empFname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboJobRole = new combobox.Combobox();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_empId = new javax.swing.JTextField();
        txt_empLname = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_empNic = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txt_empMobile = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        sroll = new textarea.TextAreaScroll();
        txt_empAddress = new textarea.TextArea();
        jLabel22 = new javax.swing.JLabel();
        radioFemale = new swing.RadioButtonCustom();
        radioMale = new swing.RadioButtonCustom();
        dateEmployeed = new com.toedter.calendar.JDateChooser();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        dateDob = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        clearField = new javax.swing.JLabel();
        roundPanel2 = new javaswingdev.swing.RoundPanel();
        card1 = new javaswingdev.card.Card();
        jLabel13 = new javax.swing.JLabel();
        textFieldAnimation1 = new swing.TextFieldAnimation();
        jScrollPane1 = new javax.swing.JScrollPane();
        JT_employee = new javaswingdev.swing.table.Table();

        setBackground(new java.awt.Color(228, 232, 229));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roundPanel1.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel6.setText("Manage Employees");
        roundPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        delete.setBackground(new java.awt.Color(153, 204, 255));
        delete.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(0, 102, 204));
        delete.setText("DELETE");
        delete.setBorder(null);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        roundPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 830, 300, 35));

        switchButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        switchButton.setName(""); // NOI18N
        roundPanel1.add(switchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 700, 40, 20));

        txt_empFname.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_empFname.setForeground(new java.awt.Color(102, 102, 102));
        txt_empFname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_empFname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_empFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_empFnameActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_empFname, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 300, 35));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("First Name");
        roundPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        save.setBackground(new java.awt.Color(153, 204, 255));
        save.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        save.setForeground(new java.awt.Color(0, 102, 204));
        save.setText("SAVE USER");
        save.setBorder(null);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        roundPanel1.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 770, 640, 35));

        update.setBackground(new java.awt.Color(153, 204, 255));
        update.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(0, 102, 204));
        update.setText("UPDATE");
        update.setBorder(null);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        roundPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 830, 300, 35));

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("After that you can save the user to system.");
        roundPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 920, 320, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Fill all these fields then click SAVE USER button, ");
        roundPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 920, 320, -1));

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("UPDATE or DELETE user.");
        roundPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 970, 320, -1));

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Double-Click to select user using this table.");
        roundPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 950, 250, -1));

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Then automatically fill all these fields. After that you can ");
        roundPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 950, 320, -1));

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setOpaque(true);
        roundPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 950, 10, 30));

        jLabel5.setBackground(new java.awt.Color(51, 204, 255));
        jLabel5.setOpaque(true);
        roundPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 920, 10, 20));

        comboJobRole.setBorder(null);
        comboJobRole.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        comboJobRole.setLabeText("");
        roundPanel1.add(comboJobRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 610, 300, 40));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Status");
        roundPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 700, -1, -1));

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Employee ID");
        roundPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 100, -1));

        txt_empId.setEditable(false);
        txt_empId.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_empId.setForeground(new java.awt.Color(102, 102, 102));
        txt_empId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_empId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        roundPanel1.add(txt_empId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 640, 35));

        txt_empLname.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_empLname.setForeground(new java.awt.Color(102, 102, 102));
        txt_empLname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_empLname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_empLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_empLnameActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_empLname, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 200, 300, 35));

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Last Name");
        roundPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, -1, -1));

        txt_empNic.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_empNic.setForeground(new java.awt.Color(102, 102, 102));
        txt_empNic.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_empNic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_empNic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_empNicActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_empNic, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 300, 35));

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("NIC");
        roundPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        txt_empMobile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txt_empMobile.setForeground(new java.awt.Color(102, 102, 102));
        txt_empMobile.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_empMobile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        txt_empMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_empMobileActionPerformed(evt);
            }
        });
        roundPanel1.add(txt_empMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 300, 35));

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Mobile No");
        roundPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 260, -1, -1));

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("Date of Birth");
        roundPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 470, -1, -1));

        sroll.setBackground(new java.awt.Color(255, 255, 255));
        sroll.setLabelText("");

        txt_empAddress.setColumns(20);
        txt_empAddress.setRows(2);
        txt_empAddress.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        sroll.setViewportView(txt_empAddress);

        roundPanel1.add(sroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 640, 80));

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("Address");
        roundPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        radioFemale.setBackground(new java.awt.Color(102, 0, 255));
        btnGroupGender.add(radioFemale);
        radioFemale.setForeground(new java.awt.Color(102, 102, 102));
        radioFemale.setText("FEMALE");
        radioFemale.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        radioFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFemaleActionPerformed(evt);
            }
        });
        roundPanel1.add(radioFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 510, -1, -1));

        radioMale.setBackground(new java.awt.Color(102, 0, 255));
        btnGroupGender.add(radioMale);
        radioMale.setForeground(new java.awt.Color(102, 102, 102));
        radioMale.setText("MALE");
        radioMale.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        roundPanel1.add(radioMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));

        dateEmployeed.setBackground(new java.awt.Color(255, 255, 255));
        dateEmployeed.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        dateEmployeed.setForeground(new java.awt.Color(102, 102, 102));
        dateEmployeed.setDateFormatString("d - MMM - yyyy");
        dateEmployeed.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        roundPanel1.add(dateEmployeed, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 610, 300, 40));

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("Gender");
        roundPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("Date Employeed");
        roundPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 570, -1, -1));

        dateDob.setBackground(new java.awt.Color(255, 255, 255));
        dateDob.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));
        dateDob.setForeground(new java.awt.Color(102, 102, 102));
        dateDob.setDateFormatString("d - MMM - yyyy");
        dateDob.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        roundPanel1.add(dateDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 510, 300, 40));

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Job Role");
        roundPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, -1, -1));

        clearField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/burger/icon/close_1.png"))); // NOI18N
        clearField.setText("Clear Fields");
        clearField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearFieldMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearFieldMouseEntered(evt);
            }
        });
        roundPanel1.add(clearField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 690, 120, 40));

        add(roundPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 680, 1030));

        roundPanel2.setBackground(new java.awt.Color(255, 255, 255));
        roundPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        card1.setDescription("");
        card1.setIcon(javaswingdev.GoogleMaterialDesignIcon.SEARCH);
        roundPanel2.add(card1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 60, 50));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel13.setText("Search Employees");
        roundPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        textFieldAnimation1.setBackground(new java.awt.Color(228, 232, 229));
        textFieldAnimation1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAnimation1ActionPerformed(evt);
            }
        });
        textFieldAnimation1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldAnimation1KeyReleased(evt);
            }
        });
        roundPanel2.add(textFieldAnimation1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 330, -1));

        JT_employee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "First Name", "Last Name", "NIC", "Mobile No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JT_employee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JT_employeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JT_employee);

        roundPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 920, 790));

        add(roundPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 980, 1030));
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
          if (!txt_empId.getText().equals("")) {
                int deleteEmp = JOptionPane.showConfirmDialog(null, "Do you want to Delete this Employee?", "Select", JOptionPane.YES_NO_OPTION);
                if (deleteEmp == 0) {
                    ResultSet rs = DB.search("select * from employee where emp_id = '" + txt_empId.getText() + "'");
                    if (rs.next()) {
                        DB.push("update employee set stat = '0' where emp_id ='"
                                + txt_empId.getText() + "'");

                        DB.push("insert into system_activity (detail, date, time, employee) values ("
                                + "'Employee Deleted',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),'" + SystemConfigData.getEmployee() + "')");
          
                        JOptionPane.showMessageDialog(this, "Employee Delete Successfuly!", "Deleted", JOptionPane.INFORMATION_MESSAGE);
//                   
                        log.info("Employee Deleted Successful. Employee : " + txt_empId.getText() + " | By : " + SystemConfigData.getEmployee());
                        clearFields();
                        loadEmployeeTable();
                    } else {
                        clearFields();
                        JOptionPane.showMessageDialog(this, "Invalid Employee ID!", "Error", JOptionPane.ERROR_MESSAGE);

                        log.error("Invalid Employee Id");
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "Fill the Employee ID!", "Error", JOptionPane.ERROR_MESSAGE);

            }  
        } catch (Exception e) {
             log.error("Employee Delete Failed", e);
            
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
         try {
            ResultSet rs = DB.search("select * from employee where emp_id ='" + txt_empId.getText() + "' ");
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Employee ID is already Used.Please use UPDATE button to update details", "Error", JOptionPane.ERROR_MESSAGE);
             

            } else {
                if (!txt_empId.getText().equals("") && !txt_empFname.getText().equals("")
                        && !txt_empLname.getText().equals("") && !txt_empAddress.getText().equals("")
                        && !txt_empMobile.getText().equals("") && !txt_empNic.getText().equals("")
                        && !dateDob.getDate().equals("") && !dateEmployeed.getDate().equals("")) {
                    String Gender = (radioMale.isSelected()) ? "Male" : "Female";
                    String eRole = comboJobRole.getSelectedItem().toString();
                   
                    Date dob = dateDob.getDate();
                    Date dateEmp = dateEmployeed.getDate();
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String Dob = sdf.format(dob);
                    String DateEmp = sdf.format(dateEmp);

                    String stat = null;
                    if (switchButton.isSelected()) {
                        stat = "1";
                    } else {
                        stat = "0";
                    }

             
                ResultSet rs2 = DB.search("select * from role where role = '" + eRole+ "'");
                if (rs2.next()) {
                    String roleId = (rs2.getString("role_id"));
             
                    DB.push("insert into employee values('"
                            + txt_empId.getText() + "','"
                            + txt_empFname.getText() + "','"
                            + txt_empLname.getText() + "','"
                            + txt_empNic.getText() + "','"
                            + txt_empMobile.getText() + "','"
                            + txt_empAddress.getText()+ "','"
                            + Gender + "','"
                            + Dob + "','"
                            + roleId + "','"
                            + DateEmp + "','"
                            + stat + "','Not Assign')");

                    DB.push("insert into system_activity (detail, date, time, employee) values ("
                            + "'Employee Saved',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),'" + SystemConfigData.getEmployee() + "')");
                   
                    log.info("Employee Saved Successful. Employee  : " + txt_empId.getText() + " |By : " + SystemConfigData.getEmployee());
                    clearFields();
                    JOptionPane.showMessageDialog(this, "Employee Saved Successfuly!", "Saved", JOptionPane.INFORMATION_MESSAGE);
                    JT_employee.setEnabled(true);

                    loadEmployeeTable();
                }
                } else {
                    JOptionPane.showMessageDialog(this, "Fill All text Inpute!", "Error", JOptionPane.ERROR_MESSAGE);

                }
            }
        } catch (Exception e) {
            log.error("Employee Save Failed", e);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
         try {
             if (!txt_empId.getText().equals("") && !txt_empFname.getText().equals("")
                        && !txt_empLname.getText().equals("") && !txt_empAddress.getText().equals("")
                        && !txt_empMobile.getText().equals("") && !txt_empNic.getText().equals("")
                        && !dateDob.getDate().equals("") && !dateEmployeed.getDate().equals("")) {
                  ResultSet rs = DB.search("select * from employee where emp_id = '" + txt_empId.getText() + "'");
                    if (rs.next()) {
                    String Gender = (radioMale.isSelected()) ? "Male" : "Female";
                    String eRole = comboJobRole.getSelectedItem().toString();
                   
                    Date dob = dateDob.getDate();
                    Date dateEmp = dateEmployeed.getDate();
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String Dob = sdf.format(dob);
                    String DateEmp = sdf.format(dateEmp);

                    String stat = null;
                    if (switchButton.isSelected()) {
                        stat = "1";
                    } else {
                        stat = "0";
                    }

             
                ResultSet rs2 = DB.search("select * from role where role = '" + eRole+ "'");
                if (rs2.next()) {
                    String roleId = (rs2.getString("role_id"));
                
                

            

                DB.push("update employee set  role_id='"
                        + roleId + "', fname='"
                        + txt_empFname.getText() + "', lname='"
                        + txt_empLname.getText() + "', dob='"
                        + Dob + "',nic='" + txt_empNic.getText() + "',address ='"
                        + txt_empAddress.getText() + "', mobileno='"
                        + txt_empMobile.getText() + "', gender='"
                        + Gender + "',date_employeed='"
                        + DateEmp + "', stat='" + stat + "' "
                        + "where emp_id ='"
                        + txt_empId.getText() + "' ");
                log.info("Employee Updated Successful. Employee : " + txt_empId.getText() + " By : " + SystemConfigData.getEmployee());
                DB.push("insert into system_activity (detail, date, time, employee) values ("
                        + "'Employee Updated',CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP(),'" + SystemConfigData.getEmployee() + "')");
                
                clearFields();
                JOptionPane.showMessageDialog(this, "Employee Updated Successfuly!", "Updated", JOptionPane.INFORMATION_MESSAGE);
                JT_employee.setEnabled(true);
                loadEmployeeTable();

                }
                    }else {
                JOptionPane.showMessageDialog(this, "Use SAVE button to Save Details!", "Error", JOptionPane.ERROR_MESSAGE);
                    }
            } else {
                JOptionPane.showMessageDialog(this, "Fill All text Inpute!", "Error", JOptionPane.ERROR_MESSAGE);

            }
        } catch (Exception e) {
            log.error("Employee Update Failed", e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void radioFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioFemaleActionPerformed

    private void txt_empFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_empFnameActionPerformed
        txt_empLname.grabFocus();
    }//GEN-LAST:event_txt_empFnameActionPerformed

    private void txt_empLnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_empLnameActionPerformed
        txt_empNic.grabFocus();
    }//GEN-LAST:event_txt_empLnameActionPerformed

    private void txt_empNicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_empNicActionPerformed
        txt_empMobile.grabFocus();
    }//GEN-LAST:event_txt_empNicActionPerformed

    private void txt_empMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_empMobileActionPerformed
        txt_empAddress.grabFocus();
    }//GEN-LAST:event_txt_empMobileActionPerformed

    private void clearFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearFieldMouseClicked
        clearFields();
    }//GEN-LAST:event_clearFieldMouseClicked

    private void clearFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearFieldMouseEntered

    }//GEN-LAST:event_clearFieldMouseEntered

    private void textFieldAnimation1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAnimation1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldAnimation1ActionPerformed

    private void textFieldAnimation1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldAnimation1KeyReleased
        DefaultTableModel dtm = (DefaultTableModel) JT_employee.getModel();
        String searchText = textFieldAnimation1.getText();
        TableRowSorter<DefaultTableModel> searchEmp = new TableRowSorter<>(dtm);
        JT_employee.setRowSorter(searchEmp);
        searchEmp.setRowFilter(RowFilter.regexFilter(searchText));
    }//GEN-LAST:event_textFieldAnimation1KeyReleased

    private void JT_employeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JT_employeeMouseClicked
        try {
            DefaultTableModel dtm = (DefaultTableModel) JT_employee.getModel();
            int selectRow = JT_employee.getSelectedRow();

            String emp_id = dtm.getValueAt(selectRow, 0).toString();
            txt_empId.setText(emp_id);

            ResultSet rs = DB.search("select * from employee where emp_id = '" + emp_id + "'");
            if (rs.next()) {
                txt_empFname.setText(rs.getString("fname"));
                txt_empLname.setText(rs.getString("lname"));
                txt_empAddress.setText(rs.getString("address"));
                txt_empMobile.setText(rs.getString("mobileno"));
                txt_empNic.setText(rs.getString("nic"));

                String Gender = (rs.getString("gender"));
                if (Gender.equals("Male")) {
                    radioMale.setSelected(true);
                } else {
                    radioFemale.setSelected(true);
                }
                String status = (rs.getString("stat"));
                if (status.equals("1")) {
                    switchButton.setSelected(true);
                } else {
                    switchButton.setSelected(false);
                }
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                Date parse = sdf.parse(rs.getString("dob"));;
                Date parse2 = sdf.parse(rs.getString("date_employeed"));
                dateDob.setDate(parse);
                dateEmployeed.setDate(parse2);

                String RoleID = (rs.getString("role_id"));
                ResultSet rs2 = DB.search("select * from role where role_id = '" + RoleID + "'");
                if (rs2.next()) {
                    String Role = (rs2.getString("role"));
                    for (int i = 0; i < comboJobRole.getItemCount(); i++) {
                        if (comboJobRole.getItemAt(i).equals(Role)) {
                            comboJobRole.setSelectedIndex(i);
                        }
                    }

                }
            }

        } catch (Exception e) {
            log.error("Load Employee Details Failed", e);
        }
    }//GEN-LAST:event_JT_employeeMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javaswingdev.swing.table.Table JT_employee;
    private javax.swing.ButtonGroup btnGroupGender;
    private javaswingdev.card.Card card1;
    private javax.swing.JLabel clearField;
    private combobox.Combobox comboJobRole;
    private com.toedter.calendar.JDateChooser dateDob;
    private com.toedter.calendar.JDateChooser dateEmployeed;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private swing.RadioButtonCustom radioFemale;
    private swing.RadioButtonCustom radioMale;
    private javaswingdev.swing.RoundPanel roundPanel1;
    private javaswingdev.swing.RoundPanel roundPanel2;
    private javax.swing.JButton save;
    private textarea.TextAreaScroll sroll;
    private javaswingdev.swing.SwitchButton switchButton;
    private swing.TextFieldAnimation textFieldAnimation1;
    private textarea.TextArea txt_empAddress;
    private javax.swing.JTextField txt_empFname;
    private javax.swing.JTextField txt_empId;
    private javax.swing.JTextField txt_empLname;
    private javax.swing.JTextField txt_empMobile;
    private javax.swing.JTextField txt_empNic;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void loadRole() {
        try {
            ResultSet resultSet = DB.search("select * from role");
            Vector v = new Vector();
            while (resultSet.next()) {
                String data = resultSet.getString("role");
                v.add(data);
            }
            comboJobRole.setModel(new DefaultComboBoxModel(v));
            comboJobRole.setSelectedIndex(-1);

        } catch (Exception e) {
            log.error("Employee Role Load Failed", e);
        }
    }

    private void loadEmployeeTable() {
        try {

            DefaultTableModel dtm = (DefaultTableModel) JT_employee.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.search("select * from employee");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("emp_id"));
                v.add(rs.getString("fname"));
                v.add(rs.getString("lname"));
                v.add(rs.getString("nic"));
                v.add(rs.getString("mobileno"));
                dtm.addRow(v);

            }

        } catch (Exception e) {
            log.error("Load Employee Details Failed", e);
        }
    }

    private void generateEmpID() {
        try {
            ResultSet rs = DB.search("select count(*) as emp_count from employee");
            if (rs.next()) {
                int count = rs.getInt("emp_count");
                int c = Integer.parseInt(new SimpleDateFormat("Mddyy").format(new Date()));
                int value = c+(++count);
                String empid= "EMP-"+value;
                txt_empId.setText(empid);
                log.info("Employee ID Loaded");
            }
            txt_empFname.grabFocus();
        } catch (Exception e) {
            log.error("Generate Employee ID Failed", e);
        }
    }

    private void clearFields() {
        txt_empFname.setText(null);
        txt_empLname.setText(null);
        txt_empAddress.setText("");
        txt_empMobile.setText(null);
        txt_empNic.setText(null);
        dateDob.setDate(null);
        dateEmployeed.setDate(null);
        btnGroupGender.clearSelection();
        comboJobRole.setSelectedIndex(-1);
        switchButton.setSelected(false);
        generateEmpID();
    }
}
